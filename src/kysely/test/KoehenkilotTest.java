package kysely.test;
// Generated by ComTest BEGIN
import java.io.*;
import java.util.*;
import kysely.*;
import static org.junit.Assert.*;
import org.junit.*;
import java.io.File;
import java.util.Iterator;
import static kysely.Koehenkilot.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2022.07.21 22:31:34 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class KoehenkilotTest {


  // Generated by ComTest BEGIN  // Koehenkilot: 41

  private Koehenkilot koehenkilot; 
  private String tiedNimi; 
  private File ftied; 

  @Before
  public void alusta() throws TallennaException {
     tiedNimi = "testikysely"; 
     ftied = new File(tiedNimi+".db"); 
     ftied.delete(); 
     koehenkilot = new Koehenkilot(tiedNimi); 
  }

  @After
  public void siivoa() {
     ftied.delete(); 
  }
  // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLisaa112 
   * @throws TallennaException when error
   */
  @Test
  public void testLisaa112() throws TallennaException {    // Koehenkilot: 112
    Collection<Koehenkilo> loytyneet = koehenkilot.etsi("", 1); 
    assertEquals("From: Koehenkilot line: 116", 0, loytyneet.size()); 
    Koehenkilo aku1 = new Koehenkilo(), aku2 = new Koehenkilo(); 
    koehenkilot.lisaa(aku1); 
    koehenkilot.lisaa(aku2); 
    loytyneet = koehenkilot.etsi("", 1); 
    assertEquals("From: Koehenkilot line: 123", 2, loytyneet.size()); 
    try {
    koehenkilot.lisaa(aku1); 
    fail("Koehenkilot: 126 Did not throw TallennaException");
    } catch(TallennaException _e_){ _e_.getMessage(); }
    Koehenkilo aku3 = new Koehenkilo(); Koehenkilo aku4 = new Koehenkilo(); 
    Koehenkilo aku5 = new Koehenkilo(); 
    koehenkilot.lisaa(aku3); 
    koehenkilot.lisaa(aku4); 
    koehenkilot.lisaa(aku5); 
    loytyneet = koehenkilot.etsi("", 1); 
    assertEquals("From: Koehenkilot line: 134", 5, loytyneet.size()); 
    Iterator<Koehenkilo> i = loytyneet.iterator(); 
    assertEquals("From: Koehenkilot line: 136", aku1, i.next()); 
    assertEquals("From: Koehenkilot line: 137", aku2, i.next()); 
    assertEquals("From: Koehenkilot line: 138", aku3, i.next()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testEtsi161 
   * @throws TallennaException when error
   */
  @Test
  public void testEtsi161() throws TallennaException {    // Koehenkilot: 161
    Koehenkilo aku1 = new Koehenkilo(); aku1.taytaEsimTiedot(); 
    Koehenkilo aku2 = new Koehenkilo(); aku2.taytaEsimTiedot(); 
    koehenkilot.lisaa(aku1); 
    koehenkilot.lisaa(aku2); 
    try {
    koehenkilot.lisaa(aku2); 
    fail("Koehenkilot: 167 Did not throw TallennaException");
    } catch(TallennaException _e_){ _e_.getMessage(); } // ei saa lisata sama id:ta uudelleen
    Collection<Koehenkilo> loytyneet = koehenkilot.etsi(aku1.getNimi(), 1); 
    assertEquals("From: Koehenkilot line: 169", 1, loytyneet.size()); 
    assertEquals("From: Koehenkilot line: 170", aku1, loytyneet.iterator().next()); 
    loytyneet = koehenkilot.etsi(aku2.getNimi(), 1); 
    assertEquals("From: Koehenkilot line: 172", 1, loytyneet.size()); 
    assertEquals("From: Koehenkilot line: 173", aku2, loytyneet.iterator().next()); 
    try {
    loytyneet = koehenkilot.etsi("", 15); 
    fail("Koehenkilot: 174 Did not throw TallennaException");
    } catch(TallennaException _e_){ _e_.getMessage(); }
    ftied.delete(); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testAnna220 
   * @throws TallennaException when error
   */
  @Test
  public void testAnna220() throws TallennaException {    // Koehenkilot: 220
    Koehenkilot koeapinat = new Koehenkilot(); 
    Koehenkilo cheeta = new Koehenkilo(), apina = new Koehenkilo(); 
    assertEquals("From: Koehenkilot line: 224", 0, koeapinat.getLkm()); 
    koeapinat.lisaa(cheeta); assertEquals("From: Koehenkilot line: 225", 1, koeapinat.getLkm()); 
    koeapinat.lisaa(apina); assertEquals("From: Koehenkilot line: 226", 2, koeapinat.getLkm()); 
    assertEquals("From: Koehenkilot line: 227", cheeta, koeapinat.anna(0)); 
    assertEquals("From: Koehenkilot line: 228", apina, koeapinat.anna(1)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta349 
   * @throws TallennaException when error
   */
  @Test
  public void testLueTiedostosta349() throws TallennaException {    // Koehenkilot: 349
    Koehenkilot kaniinit = new Koehenkilot(); 
    Koehenkilo kani = new Koehenkilo(), pupu = new Koehenkilo(); 
    kani.taytaEsimTiedot(); 
    pupu.taytaEsimTiedot(); 
    kaniinit.lueTiedostosta(); 
    kaniinit.lisaa(kani); 
    kaniinit.lisaa(pupu); 
    kaniinit.tallenna(); 
    kaniinit = new Koehenkilot();  // poistetaan aikaisemmat
    kaniinit.lueTiedostosta(); 
    Iterator<Koehenkilo> iteroi = kaniinit.iterator(); 
    assertEquals("From: Koehenkilot line: 365", kani, iteroi.next()); 
    assertEquals("From: Koehenkilot line: 366", pupu, iteroi.next()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKoehenkilotIterator419 
   * @throws TallennaException when error
   */
  @Test
  public void testKoehenkilotIterator419() throws TallennaException {    // Koehenkilot: 419
    Koehenkilot koehenkilot = new Koehenkilot(); 
    Koehenkilo kissa1 = new Koehenkilo(), kissa2 = new Koehenkilo(); 
    kissa1.rekisteroi(); kissa2.rekisteroi(); 
    koehenkilot.lisaa(kissa1); 
    koehenkilot.lisaa(kissa2); 
    koehenkilot.lisaa(kissa1); 
    StringBuffer ids = new StringBuffer(30); 
    for (Koehenkilo koehenkilo:koehenkilot)
    ids.append(" "+koehenkilo.getKoehenkiloNro()); 
    String tulos = " " + kissa1.getKoehenkiloNro() + " " + kissa2.getKoehenkiloNro() + " " + kissa1.getKoehenkiloNro(); 
    assertEquals("From: Koehenkilot line: 438", tulos, ids.toString()); 
    Iterator<Koehenkilo> i=koehenkilot.iterator(); 
    assertEquals("From: Koehenkilot line: 441", true, i.next() == kissa1); 
    assertEquals("From: Koehenkilot line: 442", true, i.next() == kissa2); 
    assertEquals("From: Koehenkilot line: 443", true, i.next() == kissa1); 
    try {
    i.next(); 
    fail("Koehenkilot: 445 Did not throw NoSuchElementException");
    } catch(NoSuchElementException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testMain500 
   * @throws TallennaException when error
   */
  @Test
  public void testMain500() throws TallennaException {    // Koehenkilot: 500
    Koehenkilot koehenkilot = new Koehenkilot(); 
    Koehenkilo kissa1 = new Koehenkilo(); kissa1.parse("1|k100|m|11-15"); 
    Koehenkilo kissa2 = new Koehenkilo(); kissa2.parse("2|k101|f|15-21"); 
    Koehenkilo kissa3 = new Koehenkilo(); kissa3.parse("3|k102|m|5-11"); 
    Koehenkilo kissa4 = new Koehenkilo(); kissa4.parse("4|k103|m|15-21"); 
    Koehenkilo kissa5 = new Koehenkilo(); kissa5.parse("5|k104|f|5-11"); 
    koehenkilot.lisaa(kissa1); koehenkilot.lisaa(kissa2); koehenkilot.lisaa(kissa3); koehenkilot.lisaa(kissa4); koehenkilot.lisaa(kissa5); 
    List<Koehenkilo> loytyneet; 
    loytyneet = (List<Koehenkilo>)koehenkilot.etsi("f",2); 
    assertEquals("From: Koehenkilot line: 511", 2, loytyneet.size()); 
    assertEquals("From: Koehenkilot line: 512", true, loytyneet.get(0) == kissa2); 
    assertEquals("From: Koehenkilot line: 513", true, loytyneet.get(1) == kissa5); 
    loytyneet = (List<Koehenkilo>)koehenkilot.etsi("*4*",1); 
    assertEquals("From: Koehenkilot line: 516", 1, loytyneet.size()); 
    assertEquals("From: Koehenkilot line: 517", true, loytyneet.get(0) == kissa5); 
    loytyneet = (List<Koehenkilo>)koehenkilot.etsi("*11*",3); 
    assertEquals("From: Koehenkilot line: 520", 3, loytyneet.size()); 
    assertEquals("From: Koehenkilot line: 521", true, loytyneet.get(0) == kissa1); 
    assertEquals("From: Koehenkilot line: 522", true, loytyneet.get(1) == kissa3); 
    assertEquals("From: Koehenkilot line: 523", true, loytyneet.get(2) == kissa5); 
    loytyneet = (List<Koehenkilo>)koehenkilot.etsi(null,-1); 
    assertEquals("From: Koehenkilot line: 526", 5, loytyneet.size()); 
  } // Generated by ComTest END
}